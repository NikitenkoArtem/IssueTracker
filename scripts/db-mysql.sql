DROP SCHEMA epam;
CREATE SCHEMA epam;
USE epam;

CREATE TABLE ROLES
(
  ROLE_ID INT NOT NULL AUTO_INCREMENT
, ROLE_NAME VARCHAR(100) NOT NULL
, CONSTRAINT ROLES_PK PRIMARY KEY (ROLE_ID)
);

CREATE TABLE PRIVILEGES
(
  PRIVILEGE_ID INT NOT NULL AUTO_INCREMENT
, PRIVILEGE_NAME VARCHAR(150) NOT NULL
, ROLE INT NOT NULL
, CONSTRAINT ROLES_PK PRIMARY KEY (PRIVILEGE_ID)
, CONSTRAINT ROLES_FK FOREIGN KEY (ROLE) REFERENCES ROLES (ROLE_ID)
);

CREATE TABLE USERS
(
  EMAIL VARCHAR(50) NOT NULL
, FIRST_NAME VARCHAR(45) NOT NULL
, LAST_NAME VARCHAR(45) NOT NULL
, ROLE INT NOT NULL
, PASSWORD VARCHAR(50) NOT NULL
, CONSTRAINT USERS_PK PRIMARY KEY (EMAIL)
, CONSTRAINT USERS_FK FOREIGN KEY (ROLE) REFERENCES ROLES (ROLE_ID)
);

-- ########################### STATUSES ###########################
CREATE TABLE STATUSES
(
  STATUS_ID INT NOT NULL AUTO_INCREMENT
, STATUS_NAME VARCHAR(30) NOT NULL
, CONSTRAINT STATUSES_PK PRIMARY KEY (STATUS_ID)
);

-- #################################################################

CREATE TABLE RESOLUTIONS
(
  RESOLUTION_ID INT NOT NULL AUTO_INCREMENT
, RESOLUTION_NAME VARCHAR(30) NOT NULL
, CONSTRAINT RESOLUTIONS_PK PRIMARY KEY (RESOLUTION_ID)
);

CREATE TABLE PRIORITIES
(
  PRIORITY_ID INT NOT NULL AUTO_INCREMENT
, PRIORITY_NAME VARCHAR(30) NOT NULL
, CONSTRAINT PRIORITIES_PK PRIMARY KEY (PRIORITY_ID)
);

CREATE TABLE TYPES
(
  TYPE_ID INT NOT NULL AUTO_INCREMENT
, TYPE_NAME VARCHAR(30) NOT NULL
, CONSTRAINT TYPES_PK PRIMARY KEY (TYPE_ID)
);

CREATE TABLE MANAGERS
(
  MANAGER_ID INT NOT NULL AUTO_INCREMENT
, MANAGER_NAME VARCHAR(30) NOT NULL
, EMAIL VARCHAR(50) NOT NULL
, CONSTRAINT MANAGERS_PK PRIMARY KEY (MANAGER_ID)
, CONSTRAINT MANAGERS_FK FOREIGN KEY (EMAIL) REFERENCES USERS (EMAIL)
);

CREATE TABLE PROJECTS
(
  PROJECT_ID INT NOT NULL AUTO_INCREMENT
, PROJECT_NAME VARCHAR(30) NOT NULL
, DESCRIPTION VARCHAR(100) NOT NULL
, MANAGER INT NOT NULL
, CONSTRAINT PROJECTS_PK PRIMARY KEY (PROJECT_ID)
, CONSTRAINT PROJECTS_FK FOREIGN KEY (MANAGER) REFERENCES MANAGERS (MANAGER_ID)
);

CREATE TABLE BUILDS
(
  BUILD_ID INT NOT NULL AUTO_INCREMENT
, BUILD VARCHAR(20) NOT NULL
, PROJECT INT NOT NULL
, CONSTRAINT BUILDS_PK PRIMARY KEY (BUILD_ID)
, CONSTRAINT BUILDS_FK FOREIGN KEY (PROJECT) REFERENCES PROJECTS (PROJECT_ID)
);

CREATE TABLE COMMENTS
(
  COMMENT_ID INT NOT NULL AUTO_INCREMENT
, ADDED_BY VARCHAR(50) NOT NULL
, ADD_DATE DATE NOT NULL
, COMMENT VARCHAR(255) NOT NULL
, CONSTRAINT COMMENTS_PK PRIMARY KEY (COMMENT_ID)
, CONSTRAINT COMMENTS_ADDED_BY_FK FOREIGN KEY (ADDED_BY) REFERENCES USERS (EMAIL)
);

CREATE TABLE FILES
(
  FILE_ID INT NOT NULL AUTO_INCREMENT
, ADDED_BY VARCHAR(50) NOT NULL
, ADD_DATE DATE NOT NULL
, FILE_NAME VARCHAR(255) NOT NULL
, CONTENT_TYPE VARCHAR(255)
, FILE_SIZE INT
, DATA TINYBLOB NOT NULL
, CONSTRAINT FILES_PK PRIMARY KEY (FILE_ID)
, CONSTRAINT FILES_ADDED_BY_FK FOREIGN KEY (ADDED_BY) REFERENCES USERS (EMAIL)
);

CREATE TABLE ISSUES
(
  ISSUE_ID INT NOT NULL AUTO_INCREMENT
, CREATE_DATE DATE NOT NULL
, CREATED_BY VARCHAR(50) NOT NULL
, MODIFY_DATE DATE NOT NULL
, MODIFIED_BY VARCHAR(50) NOT NULL
, SUMMARY VARCHAR(30) NOT NULL
, DESCRIPTION VARCHAR(255) NOT NULL
, STATUS INT NOT NULL
, RESOLUTION INT
, TYPE INT NOT NULL
, PRIORITY INT NOT NULL
, PROJECT INT NOT NULL
, ASSIGNEE VARCHAR(50)
, COMMENT INT
, FILE INT
, CONSTRAINT ISSUES_PK PRIMARY KEY (ISSUE_ID)
, CONSTRAINT ISSUES_CREATED_BY_FK FOREIGN KEY (CREATED_BY) REFERENCES USERS (EMAIL)
, CONSTRAINT ISSUES_MODIFIED_BY_FK FOREIGN KEY (MODIFIED_BY) REFERENCES USERS (EMAIL)
, CONSTRAINT ISSUES_STATUS_FK FOREIGN KEY (STATUS) REFERENCES STATUSES (STATUS_ID)
, CONSTRAINT ISSUES_RESOLUTION_FK FOREIGN KEY (RESOLUTION) REFERENCES RESOLUTIONS (RESOLUTION_ID)
, CONSTRAINT ISSUES_TYPE_FK FOREIGN KEY (TYPE) REFERENCES TYPES (TYPE_ID)
, CONSTRAINT ISSUES_PRIORITY_FK FOREIGN KEY (PRIORITY) REFERENCES PRIORITIES (PRIORITY_ID)
, CONSTRAINT ISSUES_PROJECT_FK FOREIGN KEY (PROJECT) REFERENCES PROJECTS (PROJECT_ID)
, CONSTRAINT ISSUES_ASSIGNEE_FK FOREIGN KEY (ASSIGNEE) REFERENCES USERS (EMAIL)
, CONSTRAINT ISSUES_COMMENT_FK FOREIGN KEY (COMMENT) REFERENCES COMMENTS (COMMENT_ID)
, CONSTRAINT ISSUES_FILE_FK FOREIGN KEY (FILE) REFERENCES FILES (FILE_ID)
);

insert into roles(ROLE_NAME) values('GUEST');
insert into roles(ROLE_NAME) values('USER');
insert into roles(ROLE_NAME) values('ADMINISTRATOR');
commit;

insert into statuses(STATUS_NAME) values('New');
insert into statuses(STATUS_NAME) values('Assigned');
insert into statuses(STATUS_NAME) values('In Progress');
insert into statuses(STATUS_NAME) values('Resolved');
insert into statuses(STATUS_NAME) values('Closed');
insert into statuses(STATUS_NAME) values('Reopened');
commit;

insert into priorities(PRIORITY_NAME) values('Critical');
insert into priorities(PRIORITY_NAME) values('Major');
insert into priorities(PRIORITY_NAME) values('Important');
insert into priorities(PRIORITY_NAME) values('Minor');
commit;

insert into types(TYPE_NAME) values('Cosmetic');
insert into types(TYPE_NAME) values('Bug');
insert into types(TYPE_NAME) values('Feature');
insert into types(TYPE_NAME) values('Performance');
commit;

insert into resolutions(RESOLUTION_NAME) values('Fixed');
insert into resolutions(RESOLUTION_NAME) values('Invalid');
insert into resolutions(RESOLUTION_NAME) values('Wontfix');
insert into resolutions(RESOLUTION_NAME) values('Worksforme');
commit;

INSERT INTO users(EMAIL, FIRST_NAME, LAST_NAME, ROLE, PASSWORD) VALUES ('anonymous', '', '', 1, '');
INSERT INTO users(EMAIL, FIRST_NAME, LAST_NAME, ROLE, PASSWORD) VALUES ('epamer@epam.ceh', 'epamer', 'epamer account', 2, 'pass');
INSERT INTO users(EMAIL, FIRST_NAME, LAST_NAME, ROLE, PASSWORD) VALUES ('teamlead@epam.ceh', 'team lead', 'team lead account', 2, 'pass');
INSERT INTO users(EMAIL, FIRST_NAME, LAST_NAME, ROLE, PASSWORD) VALUES ('admin@epam.ceh', 'admin', 'admin account', 3, 'password');
commit;

INSERT INTO managers(MANAGER_NAME, EMAIL) VALUES ('epamer', 'epamer@epam.ceh');
INSERT INTO managers(MANAGER_NAME, EMAIL) VALUES ('team lead', 'teamlead@epam.ceh');
commit;

INSERT INTO projects(PROJECT_NAME, DESCRIPTION, MANAGER) VALUES ('issue tracker', 'info', 2);
INSERT INTO projects(PROJECT_NAME, DESCRIPTION, MANAGER) VALUES ('another one', 'some text', 1);
commit;

INSERT INTO builds(BUILD, PROJECT) VALUES ('1.0', 1);
INSERT INTO builds(BUILD, PROJECT) VALUES ('1.0', 2);
commit;

INSERT INTO issues(CREATE_DATE, CREATED_BY, MODIFY_DATE, MODIFIED_BY, SUMMARY, DESCRIPTION, STATUS, RESOLUTION,
  TYPE, PRIORITY, PROJECT, ASSIGNEE)
VALUES ('2016-09-10', 'epamer@epam.ceh', '2016-09-10', 'epamer@epam.ceh', 'info', 'first record', 1, 2, 1,
  1, 1, 'epamer@epam.ceh');
INSERT INTO issues(CREATE_DATE, CREATED_BY, MODIFY_DATE, MODIFIED_BY, SUMMARY, DESCRIPTION, STATUS, RESOLUTION,
  TYPE, PRIORITY, PROJECT, ASSIGNEE)
VALUES ('2016-09-09', 'teamlead@epam.ceh', '2016-09-10', 'teamlead@epam.ceh', 'information', 'second', 1, 1,
  2, 2, 2, 'teamlead@epam.ceh');
commit;